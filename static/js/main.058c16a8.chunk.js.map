{"version":3,"sources":["Components/person/person.jsx","context/simpleContext.js","Components/person/people.jsx","Components/Common/header.jsx","Components/person/newPerson.jsx","App.js","index.js"],"names":["Perosn","console","log","this","props","fullName","deleted","Changed","className","onClick","icon","faTrash","type","onChange","placeholder","Component","SimpleContext","createContext","state","handleDeletePerson","handleChangeName","handlenewPerson","setPerson","People","context","useContext","people","map","person","id","event","Haeder","apptitle","badgeStyle","length","Alert","variant","Badge","pill","NewPerson","FocusInput","useRef","useEffect","timeout","setTimeout","current","focus","clearTimeout","onSubmit","ref","value","Button","size","style","width","height","App","toggleShowHeader","createRef","showpeople","showHeader","handleShowPeople","setState","handleShowHeader","filterpeople","filter","del","newPeople","personIndex","findIndex","user","target","e","preventDefault","Math","floor","random","click","Provider","toggleShowPeople","contextType","render","document","getElementById"],"mappings":"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","file":"static/js/main.058c16a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport propTypes from 'prop-types';\r\n// import styles from'./person.css';\r\nclass Perosn extends Component {\r\n    componentWillUnmount() {\r\n        console.log('person.jsx componentWillUnmount()');\r\n    }\r\n    render() {\r\n        const { fullName, deleted, Changed } = this.props;\r\n        return (\r\n            <div className=\"card text-black bg-info mt-3 col-10 col-md-5 d-lg-inline-block mr-2 mx-lg-2 mx-auto\">\r\n                <div className=\"card-body text-center \">\r\n                    <h4 className=\"d-black \">{`${fullName}`}</h4>\r\n                    <div className=\"input-group justify-content-center\">\r\n                        <button\r\n                            onClick={deleted}\r\n                            className=\"btn btn-sm btn-danger\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                        <div className=\"input-group-appand\">\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={Changed}\r\n                                className=\"form-control text-center \"\r\n                                placeholder={fullName}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPerosn.propTypes = {\r\n    fullName: propTypes.string,\r\n    deleted: propTypes.func,\r\n    Changed: propTypes.func,\r\n};\r\nexport default Perosn;\r\n","import { createContext } from 'react';\r\n\r\nconst SimpleContext = createContext({\r\n    state: {},\r\n    handleDeletePerson: () => {},\r\n    handleChangeName: () => {},\r\n    handlenewPerson: () => {},\r\n    setPerson: () => {},\r\n});\r\nexport default SimpleContext;\r\n","import React, { useContext } from 'react';\r\nimport Person from './person';\r\nimport SimpleContext from '../../context/simpleContext';\r\n\r\nconst People = () => {\r\n    const context = useContext(SimpleContext);\r\n    const { people } = context.state;\r\n    return (\r\n        <div>\r\n            {people.map((person) => (\r\n                <Person\r\n                    key={person.id}\r\n                    fullName={person.fullName}\r\n                    deleted={()=> {\r\n                        context.handleDeletePerson(person.id);\r\n                        } \r\n                    }\r\n                    Changed={(event) =>\r\n                        context.handleChangeName(event, person.id)\r\n                    }\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nexport default People;\r\n","import React, { useContext } from 'react';\r\nimport SimpleContext from '../../context/simpleContext';\r\nimport { Alert, Badge } from 'react-bootstrap';\r\n\r\nconst Haeder = () => {\r\n    const context = useContext(SimpleContext);\r\n    const { people, apptitle } = context.state;\r\n\r\n    let badgeStyle = '';\r\n    if (people.length >= 3) badgeStyle = 'bg-success';\r\n    if (people.length <= 2) badgeStyle = 'bg-warning';\r\n    if (people.length <= 1) badgeStyle = 'bg-danger';\r\n    return (\r\n        <div>\r\n            <Alert variant=\"info\">\r\n                <h2> {apptitle}</h2>\r\n            </Alert>\r\n            <h5>\r\n                <Alert variant=\"light\">\r\n                    <p className=\"d-inline mx-1\">تعداد اشخاص </p>\r\n                    <Badge pill className={badgeStyle}>\r\n                        {people.length}\r\n                    </Badge>\r\n                    <p className=\"d-inline mx-1\"> نفر میباشد</p>\r\n                </Alert>\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\nexport default Haeder;\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\r\nimport { Button } from 'react-bootstrap';\r\nimport SimpleContext from '../../context/simpleContext';\r\n\r\nconst NewPerson = () => {\r\n    const FocusInput = useRef(null);\r\n    useEffect(() => {\r\n        var timeout = setTimeout(() => {\r\n            FocusInput.current.focus();\r\n        }, 300);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, []);\r\n\r\n    const context = useContext(SimpleContext);\r\n    const { handlenewPerson, setPerson } = context;\r\n    const { person } = context.state;\r\n    return (\r\n        <div className=\"m-2 p-2 \">\r\n            <form\r\n                className=\"d-flex justify-content-center\"\r\n                onSubmit={handlenewPerson}\r\n            >\r\n                <div className=\"input-group w-50\">\r\n                    <input\r\n                        ref={FocusInput}\r\n                        className=\"form-control text-center\"\r\n                        type=\"text\"\r\n                        placeholder=\" اسم وارد کنید\"\r\n                        onChange={setPerson}\r\n                        value={person}\r\n                    />\r\n                    <Button type=\"submit\" variant=\"success\" size=\"sm\">\r\n                        <BsFillPersonPlusFill\r\n                            style={{ width: '2em', height: '2em' }}\r\n                        />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport default NewPerson;\r\n","import React, { Component, createRef } from 'react';\r\nimport { Button, Alert } from 'react-bootstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport People from './Components/person/people';\r\nimport Haeder from './Components/Common/header';\r\nimport SimpleContext from './context/simpleContext';\r\nimport NewPerson from './Components/person/newPerson';\r\n\r\nclass App extends Component {\r\n    \r\n    toggleShowHeader = createRef();\r\n    // toggleShowPeople = createRef();\r\n    state = {\r\n        people: [],\r\n        person: '',\r\n        showpeople: true,\r\n        showHeader: true,\r\n        apptitle: 'مدیریت کننده اعضا',\r\n    };\r\n    static contextType = SimpleContext;\r\n\r\n    componentDidMount() {\r\n        this.toggleShowHeader.current.click();\r\n        // this.toggleShowPeople.current.click();\r\n    }\r\n    handleShowPeople = () => {\r\n        this.setState({ showpeople: !this.state.showpeople });\r\n    };\r\n    handleShowHeader = () => {\r\n        this.setState({ showHeader: !this.state.showHeader });\r\n    };\r\n    handleDeletePerson = (id) => {\r\n        const people = [...this.state.people];\r\n        const filterpeople = people.filter((del) => del.id !== id);\r\n        this.setState({ people: filterpeople });\r\n\r\n    };\r\n    handleChangeName = (event, id) => {\r\n        const newPeople = [...this.state.people];\r\n        const personIndex = newPeople.findIndex((user) => user.id === id);\r\n        newPeople[personIndex].fullName = event.target.value;\r\n        this.setState({ people: newPeople });\r\n    };\r\n    handlenewPerson = (e) => {\r\n        e.preventDefault();\r\n        const person = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            fullName: this.state.person,\r\n        };\r\n        if (this.state.person) {\r\n            this.setState({\r\n                people: [...this.state.people, person],\r\n                person: '',\r\n            });\r\n         \r\n        }\r\n    };\r\n    setPerson = (event) => {\r\n        this.setState({ person: event.target.value });\r\n    };\r\n    render() {\r\n        const { showpeople, showHeader } = this.state;\r\n\r\n        // const btnStyle = {\r\n        //     color: 'black',\r\n        //     backgroundColor: 'skyblue',\r\n        //     ':hover': {\r\n        //         color: 'red',\r\n        //         backgroundColor: 'gold',\r\n        //     },\r\n        // };\r\n        return (\r\n            <SimpleContext.Provider\r\n                value={{\r\n                    state: this.state,\r\n                    handleDeletePerson: this.handleDeletePerson,\r\n                    handleChangeName: this.handleChangeName,\r\n                    handlenewPerson: this.handlenewPerson,\r\n                    setPerson: this.setPerson,\r\n                }}\r\n            >\r\n                <div className=\"rtl text-center\">\r\n                    {!showHeader && (\r\n                        <Alert variant=\"success\">\r\n                            <h4>برای نمایش هدر لطفا روی دکمه زیر کلیک کنید</h4>\r\n                        </Alert>\r\n                    )}\r\n                    {showHeader && <Haeder />}\r\n                    <Button\r\n                        onClick={this.handleShowHeader}\r\n                        variant={showHeader ? 'primary' : 'danger'}\r\n                        ref={this.toggleShowHeader}\r\n                    >\r\n                        {showHeader ? 'بستن هدر' : 'نمایش هدر'}\r\n                    </Button>\r\n                    <NewPerson />\r\n                    <Button\r\n                        onClick={this.handleShowPeople}\r\n                        variant={showpeople ? 'info' : 'danger'}\r\n                        ref={this.toggleShowPeople}\r\n                    >\r\n                        {showpeople ? 'بستن اعضا' : 'نمایش اعضا'}\r\n                    </Button>\r\n                    {/* <button onClick={this.handleShowPeople} style={btnStyle}> */}\r\n                    {/* نمایش بده\r\n                    </button> */}\r\n                    <ToastContainer />\r\n                    {showpeople && <People />}\r\n                </div>\r\n            </SimpleContext.Provider>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react'; \r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\nimport \"./index.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nrender(<App/>, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}